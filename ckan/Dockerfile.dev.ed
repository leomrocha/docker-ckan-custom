FROM alpine:3.8
ENV TZ UTC

# Set CKAN version to build
ENV GIT_URL=https://github.com/ckan/ckan.git
ENV GIT_BRANCH=ckan-2.8.2

# Set src dirs
ENV SRC_DIR=/srv/app/src
ENV PIP_SRC=${SRC_DIR}
ENV APP_DIR=/srv/app
ENV SRC_EXTENSIONS_DIR=/srv/app/src_extensions

ENV CKAN__SITE_URL=http://ckan:5000
ENV CKAN__PLUGINS envvars image_view text_view recline_view datastore datapusher
ENV CKAN_INI=/srv/app/development.ini

WORKDIR ${SRC_DIR}

# Packages to build CKAN requirements and plugins
RUN apk add --no-cache tzdata \
                        git \
                        gettext \
                        postgresql-client \
                        python2 \
                        apache2-utils \
                        libxml2 \
                        libxslt \
                        musl-dev \
                        py2-gevent \
                        uwsgi \
                        uwsgi-http \
                        uwsgi-corerouter \
                        uwsgi-python \
                        uwsgi-gevent \
                        libmagic \
                        curl 

RUN apk add --no-cache --virtual .build-deps \
                                    postgresql-dev  \
                                    gcc \
                                    make \
                                    g++ \
                                    autoconf \
                                    automake \
                                    libtool \
                                    python-dev \
                                    libxml2-dev \
                                    libxslt-dev \
                                    linux-headers 

RUN apk add --no-cache libffi-dev


                                
RUN mkdir -p ${SRC_DIR} 

RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/2.7/get-pip.py && \
    python ${SRC_DIR}/get-pip.py pip==20.3.3 wheel==0.36.2 setuptools==44.1.1 && \
    pip install supervisor

RUN rm -rf ${SRC_DIR}/get-pip.py

RUN pip install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan
RUN cd ${SRC_DIR}/ckan && cp who.ini ${APP_DIR}
RUN cd ${SRC_DIR}/ckan && pip install --no-binary :all: -r requirements.txt 
RUN pip install -e git+https://github.com/okfn/ckanext-envvars.git#egg=ckanext-envvars    
RUN paster --plugin=ckan make-config ckan ${CKAN_INI}

# Extensions extra dependencies
#RUN apk add py-future
#RUN apk add py-cryptography
#RUN pip install cryptography==2.8

RUN pip install --upgrade pip==20.3 && pip install  --no-cache-dir git+https://github.com/datopian/ckanext-s3filestore.git@fix-null-content-type#egg=ckanext-s3filestore && \
    pip install --no-cache-dir -r https://raw.githubusercontent.com/datopian/ckanext-s3filestore/fix-null-content-type/requirements.txt && \
    pip install --no-cache-dir git+https://github.com/okfn/ckanext-sentry.git#egg=ckanext-sentry && \
    # scheming
    #pip install -e git+https://github.com/ckan/ckanext-scheming.git@release-1.2.0#egg=ckanext-scheming && \
    #pip install -r https://raw.githubusercontent.com/ckan/ckanext-scheming/master/requirements.txt && \
    # harvest
    pip install -e git+https://github.com/ckan/ckanext-harvest.git@v1.1.4#egg=ckanext-harvest && \
    pip install -r https://raw.githubusercontent.com/ckan/ckanext-harvest/v1.1.4/pip-requirements.txt && \
    # GA-report
    pip install -e git+https://github.com/CivicActions/ckanext-ga-report.git@v0.0.3#egg=ckanext-ga-report && \
    pip install -r https://raw.githubusercontent.com/CivicActions/ckanext-ga-report/master/requirements.txt && \
    # showcase
    pip install -e git+https://github.com/keitaroinc/ckanext-showcase.git@ckan-2.8#egg=ckanext-showcase && \
    # pages
    pip install -e git+https://github.com/keitaroinc/ckanext-pages.git@pages-ckan-2.8#egg=ckanext-pages && \
    # disqus
    pip install -e git+https://github.com/ckan/ckanext-disqus#egg=ckanext-disqus && \
    # datajson
    pip install -e git+https://github.com/datopian/ckanext-datajson.git@0.5.1#egg=ckanext-datajson && \
    pip install -r ${APP_DIR}/src/ckanext-datajson/requirements.txt && \
    # hierarchy
    pip install -e git+https://github.com/datopian/ckanext-hierarchy.git@v0.1-1#egg=ckanext-hierarchy && \
    # geoview
    pip install -e git+https://github.com/okfn/ckanext-geoview.git@lacounts-0.1#egg=ckanext-geoview && \
    # pdfview
    pip install -e git+https://github.com/okfn/ckanext-pdfview.git@lacounts-0.1#egg=ckanext-pdfview && \
    # USmetadata
    pip install -e git+https://github.com/ViderumGlobal/USMetadata#egg=ckanext-usmetadata && \
    # googleanalytics
    pip install -e git+https://github.com/datopian/ckanext-googleanalytics.git@ed-debug#egg=ckanext-googleanalytics && \
    pip install -r https://raw.githubusercontent.com/datopian/ckanext-googleanalytics/ed-debug/requirements.txt && \
    # contact
    pip install -e git+https://github.com/okfn/ckanext-contact.git@lacounts-0.1#egg=ckanext-contact && \
    pip install future openpyxl

# For debuging
RUN pip install ipdb

# Create a local user and group to run the app
RUN addgroup -g 92 -S ckan && \
    adduser -u 92 -h /srv/app -H -D -S -G ckan ckan

RUN mkdir -p /var/lib/ckan-ed
RUN chown -R ckan:ckan /var/lib/ckan-ed

ONBUILD RUN mkdir /docker-entrypoint.d
COPY docker-entrypoint.d/ed/* /docker-entrypoint.d/

COPY setup/uwsgi.conf /srv/app
COPY setup/prerun.py /srv/app

RUN mkdir /etc/supervisord.d
RUN mkdir /tmp/supervisord
RUN chown -R ckan.ckan /tmp/supervisord
RUN chown -R ckan.ckan /etc/supervisord.d

COPY setup/supervisord.conf /etc
COPY setup/supervisord.d/* /etc/supervisord.d/

RUN chown -R ckan.ckan ${APP_DIR}

EXPOSE 5000

CMD ["/srv/app/start_ckan.sh"]

RUN pip install --no-binary :all: -r https://raw.githubusercontent.com/ckan/ckan/${GIT_BRANCH}/dev-requirements.txt

COPY setup/start_ckan_development.sh /srv/app

RUN mkdir $SRC_EXTENSIONS_DIR
RUN chown -R ckan.ckan ${SRC_EXTENSIONS_DIR}

CMD ["/srv/app/start_ckan_development.sh"]